# 바닥 공사

def solution(n):
    d = [0] * 1001

    d[1] = 1
    d[2] = 3

    for i in range(3, n + 1):
        """
        dp 테이블에 이전까지의 경우의 수를 모두 저장
        1. 길이가 n일 때 n - 1 까지 모두 채워져있다면 더 만들어낼 수 있는 값은 1개 (1 x 2 타일)
        2. 길이가 n일 때 n - 2 까지 모두 채워져있다면 더 만들어낼 수 있는 값은 2개 (2 x 1 타일 * 2, 2 x 2 타일)
        3. n - 3째 이하의 최적의 해는 앞서 dp 테이블에 저장되어있음
        따라서 아래와 같은 식을 세울 수 있음   
        """
        d[i] = ((1 * d[i - 1]) + (2 * d[i - 2])) % 796796

    return d[n]


if __name__ == '__main__':
    n = 5
    print(solution(n))

"""
🔑 key
dp 테이블에 경우의 수를 모두 저장할 수 있다는 생각
주어진 타일에 특성(크기)를 고려하여 i - 1, i - 2에 대한 마지막 점화식을 세울 수 있는가 
"""