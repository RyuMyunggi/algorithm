# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화

def solution(x):
    d = [0] * 100

    d[1] = 1
    d[2] = 1

    # 반복문으로 피보나치 함수 구현(바텀업 프로그래밍)
    for i in range(3, x + 1):
        d[i] = d[i - 1] + d[i - 2]

    return d[x]


"""
다이나믹 프로그래밍의 전형적인 형태는 바텀 없 방식
바텀 업 방식에서 사용되는 저장용 리스트는 DP 테이블이라고 함

"""


if __name__ == '__main__':
    print(solution(6))